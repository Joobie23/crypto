solidity
pragma solidity ^0.8.0;

import "./IERC20.sol";
import "./FlashLoanReceiver.sol";

contract ArbitrageBot {
    address private constant flashLoanReceiver = address(0x...); // Address of the FlashLoanReceiver contract
    address private constant btcToken = address(0x...); // Address of Bitcoin token

    uint private constant loanAmount = 1000; // Amount of flash loan in BTC tokens

    function executeArbitrage() external {
        // Step 1: Flash loan BTC tokens
        IERC20(btcToken).approve(flashLoanReceiver, loanAmount);
        FlashLoanReceiver(flashLoanReceiver).flashLoan(btcToken, loanAmount);

        // Step 2: Perform arbitrage
        // Search all valid exchanges for the current lowest price of Bitcoin
        // Execute buy order on the exchange with the lowest price

        // Search all valid exchanges for the current highest price of Bitcoin
        // Execute sell order on the exchange with the highest price

        // Step 3: Repay flash loan
        IERC20(btcToken).transfer(flashLoanReceiver, loanAmount);

        // Step 4: Send profit to your wallet
        // ...
    }
}